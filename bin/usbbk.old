#!/bin/bash 

## TODO!
## Change from sudo mount to udisks 
## udisks --mount /dev/sdc1 --mount-fstype vfat

basedst="/mnt/usb/backup/"

# srchost:srcpath^dstpath
path2bkup[0]="jimconn-1.desktop:/workplace2/work^jimconn-1/"
path2bkup[1]="$HOME^jimconn-1/"
path2bkup[2]="/etc^jimconn-1/"

logpath='/var/tmp'
bkuplog='bkup.log'
device='/dev/sdb1'
remote=0

TEMP=$(getopt -an $0 --long help,remote,device: -o hrd: -- "$@")
if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

if [ $# = 1 ]
then
    echo 'You will be backing up local paths.'
    echo 'Press any key to continue or ctrl+c to quite.'
    echo
    read a
else
    while true
    do
        case $1 in
            -d|--device) 
                shift
                device=$1
            ;;
            -r|--remote) 
                shift
                remote=1
            ;;
            -h|--help)
                shift
                cat <<EOM
                Usage: $0 [--device </dev/foo>] [--remote] --help

                * defaults to /dev/sdb1 for the back up device
                --remote is used to backup jimconn-1.desktop
                --help - this help message
EOM
                exit
            ;;
            --) break;;
            *) shift;;
        esac
    done
fi

# if the device on the command line used was absolute path
# then grab the relative device name.
#device=${device##*/}

if [ ! -z "$remote" -a "$remote" = 1 ]
then
    path2bkup[3]="jimconn-ubuntu.aka.amazon.com:/etc^ubuntu/"
 # assuming that $HOME on src and dst host is the same.
    path2bkup[4]="jimconn-ubuntu.aka.amazon.com:/home/likewise-open/ANT/jimconn^ubuntu/"
fi

# Verify that the backup device is mounted...
#if [ $(mount | grep -c /mnt/usb) = 0 ]
if [ $(udisks --show-info $device > /dev/null 2>&1;echo $?) -gt 0 ]
then
# if it's mounted, let's make sure it's the right kind of device by checking
# the space available on the device
    if [ $(df -h | grep $device | grep -Pc '\d+\.\d+T') = 0 ]
    then
        echo 'Mounting drive...'
        #sudo mount -o user=jimconn,group=domain^users $device /mnt/usb
# Mounted /org/freedesktop/UDisks/devices/sdc1 at /media/backup
        mntpt=$(udisks --mount $device)
exit
        if [ $? -gt 0 ]
        then
            echo 'Hmm. Could not mount the medium. Is it attached? Quitting.'
            exit 1
        fi
    fi
else
    echo 'Ok. Backup medium is mounted. Rsyncing now...'
    #mount | grep /mnt/usb
    udisks --show-info $device
fi

for src in ${path2bkup[@]}
do
# srchost:srcpath^dstpath
    if [ $(echo $src | grep -c '^') -gt 0 ]
    then
        dst=${basedst}$(echo $src | cut -d '^' -f 2)
        src=$(echo $src | cut -d '^' -f 1)
    fi

    if [ $(echo $src | grep -c :) -gt 0 ]
    then
        bkupcmd="rsync -rpvzh -e ssh"
    else
        bkupcmd='rsync -rpvzh'
    fi

    logprefix=$(echo $src | cut -d '^' -f 1 | sed 's/^\///' | tr '/:' '-' | sed 's/--/-/g')

    echo 'Backup of '$src' to '$dst'       ...started'
    echo "Using command: $bkupcmd $src $dst"
    ($bkupcmd $src $dst > $logpath/$logprefix-$bkuplog 2>&1&)
done
