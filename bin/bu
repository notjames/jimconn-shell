#!/bin/bash

RSYNC_OPTS="--progress=info2,all3 -avvp --stats --exclude-from=$HOME/save/ignorelist.txt"
TO_VOLUME=""

usage()
{
  echo """

  Usage: $0 [--dry-run] [--help]

  --to:        volume name (check /Volume)
  --dry-run:   run rsync with --dry-run. Syncing will not occur.
  --help:      this message

  """
  exit 0
}

standby_vms()
{
  for vm in ${VMs[@]};do 
    for s in $(VBoxManage showvminfo "$vm" --machinereadable | grep 'VMState='); do
      s=$(echo $s | tr -d '"')
      IFS='=' read -r k v <<<"$s"

      echo >&2 -n "Checking state of VM: $vm..."

      if [[ "$k" == "VMState" ]]  && [[ "$v" == "running" ]]; then
        echo >&2 "$v: Attempting pause during backup..."

        if ! /usr/local/bin/vboxmanage controlvm $vm savestate; then
          echo >&2 "Unable to savestate of vm $vm: exit code: $?"
          return 1
        fi
        paused+=$vm
      else
        echo >&2 -n "$v"
      fi
      echo >&2
    done
  done
}

wake_up_vms()
{
  for vm in ${paused[@]};do 
    if ! /usr/local/bin/vboxmanage startvm $vm --type headless; then
      echo >&2 "Unable to restart (headless mode) vm: $vm: exit code: $?"
    fi
  done
}

macbackup ()
{
    local mounted log dts
    dts=$(date --iso-8601=seconds)
    mounted="$TO_VOLUME"
    dst_base="$mounted/samsung/mac/"
    src_base=($HOME/ /var/tmp/)
    rsync_cmd="rsync $RSYNC_OPTS"
    log="/var/tmp/backup-$dts.log";

    if ! /sbin/mount | ggrep -Pq '^.* '"$mounted"''; then
        echo >&2 'Backup volume is not mounted. Halting'
        return 1;
    fi;

    if /usr/sbin/diskutil list "$mounted" > /dev/null 2>&1; then
      if test -d "$mounted/samsung/mac/home/"; then
        echo "COMMAND USED: $rsync_cmd $HOME/ $dst_base/home/ @$dts" > "$log" 2>&1
        $rsync_cmd $HOME/ $dst_base/home/ | tee "$log" 2>&1
        $rsync_cmd /var/tmp/ $dst_base/var/tmp/ | tee "$log" 2>&1
      else
        echo >&2;'Dest path does not exist. Halting'
        return 1;
      fi;
    else
      echo >&2 'No mounted volume found...'
    fi
}

while [[ "$@" ]]; do
  case "$1" in
    --to|-t)
      shift
      if test -z "$1"; then
        echo >&2 "--to requires an argument"
        exit 1
      fi

      mkdir -p "/Volumes/$1/samsung/mac/home/" 2>/dev/null
      mkdir -p "/Volumes/$1/samsung/mac/var/tmp" 2>/dev/null

      if ! test -d "/Volumes/$1"; then
        echo >&2 "The volume: '/Volumes/$1' does not exist. Sorry."
        exit 1
      fi

      TO_VOLUME="/Volumes/$1"
    ;;
    --dry-run|-n)
      RSYNC_OPTS="--dry-run $RSYNC_OPTS"
    ;;
    --help|-h)
      usage
    ;;
    *)
      echo >&2 "Unknown argument $1"
      exit 1
    ;;
  esac
  shift
done

VMs=($(VBoxManage list vms | awk -F '"' '{print $2}'))
paused=()

if [[ "$TO_VOLUME" == "" ]]; then
  echo >&2 '--to argument is required.'
  exit 1
fi

if standby_vms; then
  echo >&2 "paused is: ${paused[@]}"
  macbackup
fi

if [[ ${#paused[@]} -gt 0 ]]; then
  wake_up_vms

#  echo >&2 'The following VMs will need to be brought back up manually: '
  for pvm in ${paused[@]}; do
    echo >&2 "$pvm"
  done
fi

