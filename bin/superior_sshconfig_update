#!/bin/bash

# todo: add use of getops
# add --template option to point to user-specified template

usage()
{
  echo >&2 """
  Usage: $0 </path/to/identity_file> </path/to/generated_ssh_config>

  Both arguments are required to be absolute paths.

  """
}

get_each()
{
  aws --region us-east-1 ec2 describe-instances \
      --query "Reservations[*].Instances[?contains(KeyName,'superior')].{PublicDnsName:PublicDnsName,PublicIpAddress:PublicIpAddress,PrivateDnsName:PrivateDnsName,PrivateIpAddress:PrivateIpAddress,Name: Tags[?Key == 'Name'].Value,NodePool: Tags[?Key == 'k2-nodepool'].Value} | []" | \
  jq -r '.[] | @sh "PUBLIC_DNS=\(.PublicDnsName) PUBLIC_ADDRESS=\(.PublicIpAddress) PRIVATE_DNS=\(.PrivateDnsName) PRIVATE_ADDRESS=\(.PrivateIpAddress) NAME=\(.Name[0]), POOL=\(.NodePool[0])"'
}

declare -gA POOLCOUNT

TMPL="./ssh_config.tmpl"
IDENTITY_FILE=$1
SSH_CONFIG=$2

[[ -z "$IDENTITY_FILE" || ! -f "$IDENTITY_FILE" ]] && \
  {
    echo >&2 'Please specify the full path to a valid ssh identity file.'
    exit 10
  }

[[ -z "$SSH_CONFIG" || ! -d "$(dirname "$SSH_CONFIG")" ]] && \
  {
    echo >&2 'Please specify the full path to the ssh config file you want to generate.'
    exit 11
  }

# back up the file if it exists.
mv "$SSH_CONFIG" "$SSH_CONFIG~" 2>/dev/null

while read -r vars
do
  vars="$(echo "$vars" | tr -d "'")"
  # shellcheck disable=SC2163
  export "$vars" SHORT_NAME IDENTITY_FILE POOL

  [[ -z "${POOLCOUNT[$POOL]}" ]] && POOLCOUNT[$POOL]=0

  let POOLCOUNT["$POOL"]+=1

  SHORT_NAME="$(echo "$NAME" | cut -d _ -f 1)"
  POOL="$POOL-${POOLCOUNT[$POOL]}"

  envsubst '$NAME $SHORT_NAME $PRIVATE_DNS $PRIVATE_ADDRESS $PUBLIC_DNS $PUBLIC_ADDRESS $IDENTITY_FILE $POOL' < $TMPL >> "$SSH_CONFIG"
done < <(get_each)
