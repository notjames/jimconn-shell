## ************************************
## Start of externaldns installation
## ************************************
# - name: externaldns
#   namespace: {{ .Environment.Values.namespace }}
#   labels:
#     tier: backend
#     app: externaldns
#   chart: bitnami/external-dns
#   version: {{ .Environment.Values.externalDNSVersion }}
#   values:
#     - "../env/{{ .Environment.Name }}/values/externaldns.yaml"
#   secrets: 
#     - "../env/{{ .Environment.Name }}/secrets/externaldns/secrets.yaml"
# - name: postgres
#   namespace: {{ .Environment.Values.namespace }}
#   labels:
#     tier: backend
#     app: postgres
#   chart: bitnami/postgresql
#   version: {{ .Environment.Values.postgresVersion }}
#   values:
#     - ../env/{{.Environment.Name}}/values/postgres.yaml
#   secrets: 
#     - ../env/{{ .Environment.Name }}/secrets/postgres/secrets.yaml    
# - name: dex
#   namespace: {{ .Environment.Values.namespace }}
#   labels:
#     tier: backend
#     app: dex
#   chart: stable/dex
#   version: {{ .Environment.Values.dexVersion }}
#   values:
#     - "../env/{{ .Environment.Name }}/values/dex.yaml"
#   secrets:
#     - "../env/{{`{{ .Environment.Name }}`}}/secrets/dex/secrets.yaml"
#   hooks:
#     # create DNS entry CR for externalDNS 
#     - events: ["presync"]
#       command: "bash"
#       showlogs: true
#       args: ["../apply-file-resource.sh", "{{`{{ .Environment.Name }}`}}", "{{`{{ .Environment.Values.helm.kubeContext }}`}}", "../env/{{`{{ .Environment.Name }}`}}/values/dex-dns.yaml", "{{`{{ .Environment.Values.namespace }}`}}"]
#     # decrypt and create DNS solver credentials
#     - events: ["presync"]
#       command: "bash"
#       showlogs: true
#       args: ["../decrypt-temp-resource.sh","../env/{{`{{ .Environment.Name }}`}}/secrets/dns-solver/aws-dns-solver-creds.yaml"]
#     - events: ["presync"]
#       command: "bash"
#       showlogs: true
#       args: ["../apply-file-resource.sh", "{{`{{ .Environment.Name }}`}}", "{{`{{ .Environment.Values.helm.kubeContext }}`}}", "../temp/aws-dns-solver-creds.yaml", "{{`{{ .Environment.Values.namespace }}`}}"]
#     # create cert manager issuer and cert 
#     - events: ["presync"]
#       command: "bash"
#       showlogs: true
#       args: ["../apply-file-resource.sh", "{{`{{ .Environment.Name }}`}}", "{{`{{ .Environment.Values.helm.kubeContext }}`}}", "../env/{{`{{ .Environment.Name }}`}}/values/cnct-issuer.yaml"]
#     - events: ["presync"]
#       command: "bash"
#       showlogs: true
#       args: ["../apply-file-resource.sh", "{{`{{ .Environment.Name }}`}}", "{{`{{ .Environment.Values.helm.kubeContext }}`}}", "../env/{{`{{ .Environment.Name }}`}}/values/cnct-cert.yaml", "{{`{{ .Environment.Values.namespace }}`}}"]
#     # Decrypt and create TLS certificates and CA for
#     # DEX grpc client/server communication
#     # these have to be knows, since frontend now requires them
#     - events: ["presync"]
#       command: "bash"
#       showlogs: true
#       args: ["../decrypt-temp-resource.sh","../env/{{`{{ .Environment.Name }}`}}/secrets/dex/grpc-tls.yaml"]
#     - events: ["presync"]
#       command: "bash"
#       showlogs: true
#       args: ["../apply-file-resource.sh", "{{`{{ .Environment.Name }}`}}", "{{`{{ .Environment.Values.helm.kubeContext }}`}}", "../temp/grpc-tls.yaml", "{{`{{ .Environment.Values.namespace }}`}}"]
#     # Create a GRPC ingress for dex - currently not a part of dex chart
#     # note that relevant config value (servicePort, dns names) will need to be adjusted in this file
#     # manually as it is not templated with values
#     - events: ["presync"]
#       command: "bash"
#       showlogs: true
#       args: ["../apply-file-resource.sh", "{{`{{ .Environment.Name }}`}}", "{{`{{ .Environment.Values.helm.kubeContext }}`}}", "../env/{{`{{ .Environment.Name }}`}}/values/dex-grpc-ingress.yaml", "{{`{{ .Environment.Values.namespace }}`}}"]

